name: Pull Request Workflow

on:
  push:
    branches:
      - master
      - develop

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: test_db
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v1
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Installation des dépendances par composer
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Installation des dépendance NPM
        run: npm install
      - name: Génération de la Clé Laravel
        run: php artisan key:generate
      - name: Exécution des tests Unitaires
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run: ./vendor/bin/phpunit
  build-js-production:
    name: Construction des Assets
    runs-on: ubuntu-latest
    needs: app-tests
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1
      - name: NPM Build
        run: |
          npm install
          npm run prod
      - name: Envoie des Assets dans Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: assets
          path: public
  deploy-production:
    name: Déploiement en production
    runs-on: ubuntu-latest
    needs: [ build-js-production, app-tests ]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1
      - name: Récupérer les actifs construits à partir des artefacts
        uses: actions/download-artifact@v1
        with:
          name: assets
          path: public
      - name: Configuration de PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.1
          extension-csv: mbstring, bcmath
      - name: Installation des dépendances composer
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Configuration de DEPLOYER
        uses: atymic/deployer-php-action@master
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
      - name: Déploiement
        env:
          DOT_ENV: ${{ secrets.DOT_ENV_PRODUCTION }}
        run: dep deploy production --tag=${{ env.GITHUB_REF }} -vvv
