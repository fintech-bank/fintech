{"version":3,"file":"js/custom/documentation/base/forms/advanced.js","mappings":";;;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://metronic/../demo2/src/js/custom/documentation/base/forms/advanced.js"],"sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTDocsAdvancedForms = function () {\r\n    // Private functions\r\n    var initShareInput = function () {\r\n        var button = document.querySelector('#kt_share_earn_link_copy_button');\r\n        var input = document.querySelector('#kt_share_earn_link_input');\r\n        var clipboard = new ClipboardJS(button);\r\n\r\n        if (!clipboard) {\r\n            return;\r\n        }\r\n\r\n        //  Copy text to clipboard. For more info check the plugin's documentation: https://clipboardjs.com/\r\n        clipboard.on('success', function (e) {\r\n            var buttonCaption = button.innerHTML;\r\n            //Add bgcolor\r\n            input.classList.add('bg-success');\r\n            input.classList.add('text-inverse-success');\r\n\r\n            button.innerHTML = 'Copied!';\r\n\r\n            setTimeout(function () {\r\n                button.innerHTML = buttonCaption;\r\n\r\n                // Remove bgcolor\r\n                input.classList.remove('bg-success');\r\n                input.classList.remove('text-inverse-success');\r\n            }, 3000);  // 3seconds\r\n\r\n            e.clearSelection();\r\n        });\r\n    }\r\n\r\n    const initInteractiveButtons = () => {\r\n        const options = document.querySelectorAll('[data-kt-docs-advanced-forms=\"interactive\"]');\r\n        const inputEl = document.querySelector('[name=\"interactive_amount\"]');\r\n        options.forEach(option => {\r\n            option.addEventListener('click', e => {\r\n                e.preventDefault();\r\n\r\n                inputEl.value = e.target.innerText;\r\n            });\r\n        });\r\n    }\r\n\r\n    const initInteractiveSlider = () => {\r\n        // Init budget slider\r\n        var budgetSlider = document.querySelector(\"#kt_docs_forms_advanced_interactive_slider\");\r\n        var budgetValue = document.querySelector(\"#kt_docs_forms_advanced_interactive_slider_label\");\r\n\r\n        noUiSlider.create(budgetSlider, {\r\n            start: [5],\r\n            connect: true,\r\n            range: {\r\n                \"min\": 1,\r\n                \"max\": 500\r\n            }\r\n        });\r\n\r\n        budgetSlider.noUiSlider.on(\"update\", function (values, handle) {\r\n            budgetValue.innerHTML = Math.round(values[handle]);\r\n            if (handle) {\r\n                budgetValue.innerHTML = Math.round(values[handle]);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initShareInput();\r\n            initInteractiveButtons();\r\n            initInteractiveSlider();\r\n        }\r\n    }\r\n}();\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTDocsAdvancedForms.init();\r\n});\r\n"],"names":[],"sourceRoot":""}